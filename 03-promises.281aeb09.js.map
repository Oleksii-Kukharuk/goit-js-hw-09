{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAQC,SAAW,IAAIC,SAAQ,SAACC,EAASC,GACvCC,YAAW,WACLP,EACFK,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,IAfSS,SAASC,cAAc,QA6C/BC,iBAAiB,SA1BzB,SAAqBC,GAEnB,GADAA,EAAMC,iBACwB,WAA1BD,EAAME,OAAOC,SAYjB,IARA,IAEuBC,EAAnBJ,EAAMK,cADRC,SAAYC,EAAKH,EAALhB,MAAOoB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,EAAYC,OAAOJ,EAAMK,OACzBC,EAAWF,OAAOH,EAAKI,OACvBE,EAAaH,OAAOF,EAAOG,OAEtBG,EAAI,EAAGA,GAAKD,EAAYC,GAAK,EACpC7B,EAAc6B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBJ,EAAAkC,OAAOC,QAAQ,qBAAoCC,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE1DiC,OAAM,SAAAJ,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBJ,EAAAkC,OAAOI,QAAQ,mBAAkCF,OAAfjC,EAAS,QAAYiC,OAANhC,EAAM,M,IAE3DsB,GAAaG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('form');\n// const stepRef = document.querySelector('.step');\n// const amountRef = document.querySelector('.amount');\n// const btnRef = document.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return (promisse = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay }); // Fulfill\n      } else {\n        reject({ position, delay }); // Reject\n      }\n    }, delay);\n  }));\n}\n\nfunction clickHandle(event) {\n  event.preventDefault();\n  if (event.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  let {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayTrue = Number(delay.value);\n  let stepTrue = Number(step.value);\n  let amountTrue = Number(amount.value);\n\n  for (let i = 1; i <= amountTrue; i += 1) {\n    createPromise(i, delayTrue)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejcted promise ${position} in ${delay}ms`);\n      });\n    delayTrue += stepTrue;\n  }\n}\n\nformRef.addEventListener('click', clickHandle);\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","promisse","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","target","nodeName","_elements","currentTarget","elements","delay1","step","amount","delayTrue","Number","value","stepTrue","amountTrue","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.281aeb09.js.map"}